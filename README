CURRENT TASKS:
----------------------------
+ think over about design;
+ write a prototype of Makefile;
+ write a main-function's prototype;
+ fill a TOOLSET field;
+ plane a git's commits;

+ write a prototype of scheduler module;
	+ read about branch predictor;
	+ read about functional pointers;
+ write a database module;
	+ read about getting a parent_of();
+ write a sort module;
	+ bubbleSort();
	+ shellSort();
	+ quickSort();
	+ compile it;
+ write an input/output interface;
	+ read about output's format;
	+ read about va_list from <stdarg.h>;
	- read about VAL(varues array's length);
	- need to partially rewrite;
+ write a file input/output inteface;
- make an error handling;
	- error's type:
		* allocation memory/file-work, crucial errors(TYPE1);
		reaction(call to uninitScheduler(int err_code)):
			1. save a current database;
			2. close all file descriptors;
			3. uninitalization all static objects;
			4. print(strerror(errno));
			5. call exit(errno);
		* allocatiom memory/file-work/input-errors, non-crucial errors;
		reaction(TYPE2):
			1. print(strerror(errno));
			2. errno=0;
			3. return control to caller;
		* user's error, a like input's error(TYPE3);
		reaction:
			1. set input's error;
			2. print(input's error);
			3. try again;

		*input_error: 	invalid number,
				key_is_notvalid,
				id_alreay_exists;
- append a scheduler module (aside sort());
	+ init/uninit functions;
	- new_entry();
	- edit_data();
	- find_entry();
	- delete_data();
	- save_to_file();
	- load_from_file();
	- show_all();
	- sort_data();
	- quit();
- write a test environment;
- write a Makefile;
	- read about a recipes;

- testing and debugging;
	- define a maximal number of entries;
	- think over about test's order;
	- append sort() to the scheduler module;

- done;
----------------------------

TOOLSET:
----------------------------
gcc (GCC) 10.2.0;
GNU Make 4.3;
VIM - Vi IMproved 8.2 
	(2019 Dec 12, compiled Jan 14 2021 18:17:04);
GNU gdb (GDB) 10.1;
git version 2.30.0;
----------------------------

VIM
----------------------------
ctrl+w:
	v	-	verically split screen;
	l	-	left to right;
	h	-	right to left;
